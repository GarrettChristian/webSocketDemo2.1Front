{"version":3,"sources":["Components/DisplayMessages.js","Components/Chat.js","Components/UserName.js","App.js","reportWebVitals.js","index.js"],"names":["DisplayMessages","props","scrollToBottom","messagesEnd","scrollIntoView","behavior","addMessage","msg","jobs","state","messages","push","setState","recievedMessage","displayMessages","map","name","from","style","color","text","time","this","className","display","float","clear","ref","el","Component","Chat","sendMessage","clientRef","JSON","stringify","typedMessage","generalDisplayArea","React","createRef","class","onSubmit","handleSubmit","value","onChange","event","target","onClick","url","topics","onConnect","console","log","onDisconnect","onMessage","current","client","UserName","curName","showError","startChat","bind","length","setName","history","withRouter","App","selectedName","to","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9b3b5441.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nclass DisplayMessages extends Component {\n\n  constructor(props) {\n      super(props);\n      this.state = {\n          messages: [],\n          name: this.props.name,\n          recievedMessage: false\n      }\n  }\n\n  scrollToBottom = () => {\n    this.messagesEnd.scrollIntoView({ behavior: \"smooth\" });\n  }\n  \n  componentDidUpdate() {\n    this.scrollToBottom();\n  }\n\n  addMessage = (msg) => {\n    var jobs = this.state.messages;\n    jobs.push(msg);\n    this.setState({messages: jobs});\n    this.state.recievedMessage = true;\n  }\n\n  displayMessages = () => {\n    return (\n      <div>\n        {this.state.messages.map(msg => {\n          return (\n            <div>\n              {this.state.name === msg.from ?\n                <div>\n                  <p style={{ color: '#6c90aa' }}>{msg.from} : {msg.text} : {msg.time}</p>\n                </div> :\n                <div>\n                  <p style={{ color: '#93aabc' }}>{msg.from} : {msg.text} : {msg.time}</p>\n                </div>\n              }\n            </div>)\n        })}\n      </div>\n    );\n  };  \n\n  render() {\n    return (\n      <div>\n        \n        {/* Display messages */}\n        <p>Messages:</p>\n        <div className=\"DivWithScroll\" style={{display: this.state.recievedMessage ? 'block' : 'none' }}>\n          <div className=\"DivToScroll\">\n            {this.displayMessages()}\n          </div>\n          <div style={{ float:\"left\", clear: \"both\" }}\n             ref={(el) => { this.messagesEnd = el; }}>\n          </div>\n        </div>\n        <div className=\"DivToScroll\" style={{display: !this.state.recievedMessage ? 'block' : 'none' }}>\n          nothing recieved yet\n        </div>\n\n      </div>\n    )\n  }\n}\n\nexport default DisplayMessages;\n","import React, {Component} from 'react';\nimport SockJsClient from 'react-stomp';\nimport DisplayMessages from './DisplayMessages';\n\nclass Chat extends Component {\n\n  constructor(props) {\n      super(props);\n      this.state = {\n          messages: [],\n          typedMessage: \"Message To Send\",\n          name: this.props.name,\n          recievedMessage: false\n      }\n      this.generalDisplayArea = React.createRef();\n  }\n\n  sendMessage = () => {\n    this.clientRef.sendMessage('/app/chat', JSON.stringify({\n        from: this.state.name,\n        text: this.state.typedMessage\n    }));\n    this.setState({typedMessage: \"Message To Send\"});\n  };\n\n  displayMessages = () => {\n    return (\n      <div>\n        {this.state.messages.map(msg => {\n          return (\n            <div>\n              {this.state.name === msg.from ?\n                <div>\n                  <p style={{ color: '#6c90aa' }}>{msg.from} : {msg.text} : {msg.time}</p>\n                </div> :\n                <div>\n                  <p style={{ color: '#93aabc' }}>{msg.from} : {msg.text} : {msg.time}</p>\n                </div>\n              }\n            </div>)\n        })}\n      </div>\n    );\n  };  \n\n  render() {\n    return (\n      <div>\n        <h2>\n          Chatting as: {this.state.name} \n        </h2>\n\n        <br></br>\n\n        <div class=\"container\">\n          <div class=\"row\">\n            <div class=\"col-md-6\">\n              {/* Submit message area */}\n              <form onSubmit={this.handleSubmit}>\n                <label>\n                  <p>Send Message: </p>\n                  <textarea className=\"textarea\" value={this.state.typedMessage} onChange={(event) => {\n                    this.setState({typedMessage: event.target.value});\n                  }}/>\n                </label>\n              </form>\n\n              <button className=\"button\" onClick={this.sendMessage}>Send</button>\n            </div>\n\n            <div class=\"col-md-6\">\n              {/* Display messages */}\n              <DisplayMessages ref={this.generalDisplayArea} name = {this.state.name}/>\n            </div>\n          </div>\n        </div>\n\n        <div>\n          {/* <SockJsClient url='http://localhost:8080/chat/' */}\n          <SockJsClient url='https://web-socket-demo-back.herokuapp.com//chat/'\n            topics={['/topic/messages']}\n            onConnect={() => {\n                console.log(\"connected!\");\n            }}\n            onDisconnect={() => {\n                console.log(\"Disconnected\");\n            }}\n            onMessage={(msg) => {\n                console.log(msg);\n                this.generalDisplayArea.current.addMessage(msg);\n            }}\n            ref={(client) => {\n                this.clientRef = client\n            }}/>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Chat;\n","import React, {Component} from 'react';\nimport { withRouter} from 'react-router-dom';\n\nclass UserName extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            curName: \"Default Username\",\n            showError: false\n        }\n        this.startChat = this.startChat.bind(this)\n    }\n\n    startChat() {\n      let curNameLen = this.state.curName.length \n      if (curNameLen > 0) {\n        this.props.setName(this.state.curName)\n        this.props.history.push(`/chat`); \n      } else {\n        this.setState({showError: true});\n      }\n    }\n  \n    render() {\n      return (\n        <div>\n          <h2>\n            Chatting as: {this.state.curName} \n          </h2>\n        \n          <form onSubmit={this.handleSubmit}>\n            <label>\n              <p>Set Username to chat</p>\n              <textarea className=\"textarea\" value={this.state.curName} onChange={(event) => {\n                this.setState({curName: event.target.value});\n              }}/>\n            </label>\n          </form>\n\n          <button className=\"button\" onClick={this.startChat}>Start Chatting!</button>\n\n          <div style={{display: this.state.showError ? 'block' : 'none' }}>\n            <p>\n              Your Username must be longer than 1 character to chat\n            </p>\n          </div>\n        </div>\n      )\n    }\n  }\n  \n  export default withRouter(UserName);\n  ","import './App.css';\nimport React, { Component } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Chat from \"./Components/Chat\";\nimport UserName from './Components/UserName';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n        name: \"Default Username\"\n    }\n  }\n\n  setName = (selectedName) => {\n    this.setState({\n      name: selectedName\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Router>\n\n            <div className=\"App-title\" >\n              <br></br>\n                \n                <h1>\n                  Testing Web Sockets!\n                </h1>\n                <h6>A Simple Chat App By Garrett Christian</h6>\n                <Link to=\"/\" style={{ color: '#FFF' }}>\n                  return to username select\n                </Link>\n              <br></br>\n            </div>\n            <br></br>\n          \n            <div>\n              {/* A <Switch> looks through its children <Route>s and\n                  renders the first one that matches the current URL. */}\n              <Switch>\n                <Route path=\"/chat\">\n                  <Chat name={this.state.name}/>\n                </Route>\n                <Route path=\"/\">\n                  <UserName setName = {this.setName} />\n                </Route>\n              </Switch>\n            </div>\n          </Router>\n        </header>\n      </div>\n    )\n  }\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}